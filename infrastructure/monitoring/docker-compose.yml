version: "3.9"

services:
  cadvisor:
    image: docker
    deploy:
      mode: global
    volumes: 
        - /var/run/docker.sock:/var/run/docker.sock:ro
    entrypoint: ["/bin/sh","-c"]
    environment:
      - PARENT={{.Task.Name}}
      - CHILDNAME={{.Service.Name}}_sidecar.{{.Node.ID}}.{{.Task.ID}}
      - CADVISOR_VERSION=v0.37.5
   
    ports:
      - "8080:8080"
    networks:
      - ovencrypt
      
    command: 
    - |
      exec docker run -i --rm --network="container:$${PARENT}" \
            --volume=/:/rootfs:ro \
            --volume=/var/run:/var/run:ro  \
            --volume=/sys:/sys:ro  \
            --volume=/var/lib/docker/:/var/lib/docker:ro \
            --volume=/dev/disk/:/dev/disk:ro \
            --name $${CHILDNAME} \
            --privileged \
            --device=/dev/kmsg \
            gcr.io/cadvisor/cadvisor:$${CADVISOR_VERSION}
    
  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    deploy:
      mode: global
    networks:
      - ovencrypt
    volumes:
      - /:/host:ro,rslave
      
  grafana:
    image: grafana/grafana-oss:latest
    
    networks:
      - ovencrypt
  
    volumes:
      - grafana-data:/var/lib/grafana
    
    ports:
       - 4000:3000
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana.onekana.ke`)" 
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.docker.network=ovencrypt"
        # - "traefik.http.routers.grafana.tls=true"
        # - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
        - "traefik.http.routers.grafana.middlewares=traefikae-auth"
    
  prometheus:
    image: prom/prometheus:latest
    networks:
      - ovencrypt
    
    volumes:
      - /etc/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command: "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    deploy:
      placement:
        constraints: 
          - node.hostname == swarm-leader

      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.onekana.ke`)" 
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.docker.network=ovencrypt"
        # - "traefik.http.routers.prometheus.tls=true"
        # - "traefik.http.routers.prometheus.tls.certresolver=letsencrypt"
        - "traefik.http.routers.prometheus.middlewares=traefikae-auth"

volumes:
  grafana-data:
  prometheus-data:
  certs:
  agent-volume:
  portainer-data:
    
networks:
  host:
    external: true
  ovencrypt:
    external: true
    attachable: true